"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[9440],{6884:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=t(4848),a=t(8453);const i={},o="react-graph-layers",s={id:"modules/react-graph-layers/developer-guide/get-started",title:"react-graph-layers",description:"Abstract",source:"@site/../docs/modules/react-graph-layers/developer-guide/get-started.md",sourceDirName:"modules/react-graph-layers/developer-guide",slug:"/modules/react-graph-layers/developer-guide/get-started",permalink:"/deck.gl-community/docs/modules/react-graph-layers/developer-guide/get-started",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/react-graph-layers/developer-guide/get-started.md",tags:[],version:"current",frontMatter:{}},d={},l=[{value:"Abstract",id:"abstract",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Roadmap",id:"roadmap",level:2},{value:"Get Started",id:"get-started",level:2},{value:"Setup Dev Environment",id:"setup-dev-environment",level:2},{value:"Clone the repo:",id:"clone-the-repo",level:4},{value:"Install yarn",id:"install-yarn",level:4},{value:"Install dependencies",id:"install-dependencies",level:4},{value:"Local Development",id:"local-development",level:4},{value:"Testing",id:"testing",level:4},{value:"Documentation",id:"documentation",level:4},{value:"Contributing",id:"contributing",level:4}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"react-graph-layers",children:"react-graph-layers"}),"\n",(0,r.jsx)("p",{align:"center",children:(0,r.jsx)("img",{src:"https://i.imgur.com/BF9aOEu.png",height:"400"})}),"\n",(0,r.jsx)(n.h2,{id:"abstract",children:"Abstract"}),"\n",(0,r.jsx)(n.p,{children:"react-graph-layers is a React component for visualizing large graphs with several utility functions. It can build a highly customizable graph visualization through its composable API. The rendering is powered by deck.gl which is a WebGL based visualization framework.  With react-graph-layers, users are enabled to build various type of graph/network applications with minimum efforts while having the capability to extend the existing styles and layouts."}),"\n",(0,r.jsx)(n.h2,{id:"motivation",children:"Motivation"}),"\n",(0,r.jsx)(n.p,{children:"Uber originally started this project as Graph.gl. After stopping efforts on Graph.gl, the OpenJS Foundation has resumed efforts."}),"\n",(0,r.jsx)(n.p,{children:"With react-graph-layers, developers are allowed to create graph visualization with minimum efforts while having the capability to override anything they want in the library."}),"\n",(0,r.jsx)(n.h2,{id:"roadmap",children:"Roadmap"}),"\n",(0,r.jsx)(n.p,{children:"TBD, we've just started a reboot to update dependencies and modernize the codebase to reflect current React best practices."}),"\n",(0,r.jsx)(n.h2,{id:"get-started",children:"Get Started"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import GraphGL, {\n  JSONLoader,\n  NODE_TYPE,\n  D3ForceLayout\n} from 'react-deck-graph-layers';\n\nconst App = ({data}) => {\n  const graph = JSONLoader({\n    json: data,\n    nodeParser: node => ({id: node.id}),\n    edgeParser: edge => ({\n      id: edge.id,\n      sourceId: edge.sourceId,\n      targetId: edge.targetId,\n      directed: true,\n    }),\n  });\n  return (\n    <GraphGL\n      graph={graph}\n      layout={new D3ForceLayout()}\n      nodeStyle={[\n        {\n          type: NODE_TYPE.CIRCLE,\n          radius: 10,\n          fill: 'blue',\n          opacity: 1,\n        },\n      ]}\n      edgeStyle={{\n        stroke: 'black',\n        strokeWidth: 2,\n      }}\n      enableDragging\n    />\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"setup-dev-environment",children:"Setup Dev Environment"}),"\n",(0,r.jsx)(n.h4,{id:"clone-the-repo",children:"Clone the repo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git clone git@github.com:deck.gl-community/react-graph-layers.git\n"})}),"\n",(0,r.jsx)(n.h4,{id:"install-yarn",children:"Install yarn"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"brew update\nbrew install yarn\n"})}),"\n",(0,r.jsx)(n.h4,{id:"install-dependencies",children:"Install dependencies"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"yarn install\n"})}),"\n",(0,r.jsx)(n.h4,{id:"local-development",children:"Local Development"}),"\n",(0,r.jsx)(n.p,{children:"You can write a story and open it in the docusaurus (using yarn 1.x):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cd website\nyarn\nyarn start\n"})}),"\n",(0,r.jsx)(n.h4,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"yarn test\n"})}),"\n",(0,r.jsx)(n.p,{children:"To get coverage information, use:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"yarn cover\n"})}),"\n",(0,r.jsx)(n.h4,{id:"documentation",children:"Documentation"}),"\n",(0,r.jsxs)(n.p,{children:["You can add your documentation (markdown) in ",(0,r.jsx)(n.code,{children:"docs/"})," folder and the new chapter in ",(0,r.jsx)(n.code,{children:"docs/table-of-contents.json"}),".\nOpen the local website:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cd website\nyarn\nyarn start\n"})}),"\n",(0,r.jsx)(n.h4,{id:"contributing",children:"Contributing"}),"\n",(0,r.jsx)(n.p,{children:"PRs and bug reports are welcome. Note that you once your PR is\nabout to be merged, you will be asked to register as a contributor\nby filling in a short form."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(6540);const a={},i=r.createContext(a);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);