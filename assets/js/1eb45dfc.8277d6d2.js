"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[4893],{5680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>y});var l=a(6540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},o=Object.keys(e);for(l=0;l<o.length;l++)a=o[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)a=o[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=l.createContext({}),d=function(e){var t=l.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=d(e.components);return l.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},g=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(a),g=n,y=p["".concat(s,".").concat(g)]||p[g]||c[g]||o;return a?l.createElement(y,r(r({ref:t},u),{},{components:a})):l.createElement(y,r({ref:t},u))}));function y(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,r=new Array(o);r[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:n,r[1]=i;for(var d=2;d<o;d++)r[d]=a[d];return l.createElement.apply(null,r)}return l.createElement.apply(null,a)}g.displayName="MDXCreateElement"},6536:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var l=a(8168),n=(a(6540),a(5680));const o={},r="Developer Guide",i={unversionedId:"modules/editable-layers/developer-guide/get-started",id:"modules/editable-layers/developer-guide/get-started",title:"Developer Guide",description:"Installation",source:"@site/../docs/modules/editable-layers/developer-guide/get-started.md",sourceDirName:"modules/editable-layers/developer-guide",slug:"/modules/editable-layers/developer-guide/get-started",permalink:"/deck.gl-community/docs/modules/editable-layers/developer-guide/get-started",draft:!1,editUrl:"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/editable-layers/developer-guide/get-started.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/deck.gl-community/docs/modules/editable-layers/"},next:{title:"EditableGeoJsonLayer",permalink:"/deck.gl-community/docs/modules/editable-layers/api-reference/layers/editable-geojson-layer"}},s={},d=[{value:"Installation",id:"installation",level:2},{value:"Design Goals",id:"design-goals",level:2},{value:"Why use <code>editable-layers</code>?",id:"why-use-editable-layers",level:2},{value:"Quick Overview of the API",id:"quick-overview-of-the-api",level:2},{value:"EditableGeoJsonLayer",id:"editablegeojsonlayer",level:3},{value:"Callbacks",id:"callbacks",level:4},{value:"Small example",id:"small-example",level:2},{value:"See Also",id:"see-also",level:2},{value:"Useful examples (Codesandbox)",id:"useful-examples-codesandbox",level:2}],u={toc:d},p="wrapper";function c(e){let{components:t,...a}=e;return(0,n.yg)(p,(0,l.A)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"developer-guide"},"Developer Guide"),(0,n.yg)("h2",{id:"installation"},"Installation"),(0,n.yg)("p",null,"For yarn"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"yarn add @deck.gl-community/editable-layers\nyarn add @deck.gl-community/react-editable-layers\n")),(0,n.yg)("h2",{id:"design-goals"},"Design Goals"),(0,n.yg)("p",null,"@deck.gl-community/editable-layers aspires to be an ultra-performant, fully 3D-enabled GeoJSON editing system primarily focused on geospatial editing use cases."),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Maximal rendering and editing performance, without need for complex application logic (such as splitting data into subgroups etc)."),(0,n.yg)("li",{parentName:"ul"},"Target performance: Editing at 60fps (e.g. dragging sub objects) in GeoJSON payloads with 100K features (points, lines or polygons)."),(0,n.yg)("li",{parentName:"ul"},"Handles GeoJSON corner cases, e.g. automatically changing object types from ",(0,n.yg)("inlineCode",{parentName:"li"},"Polygon")," to ",(0,n.yg)("inlineCode",{parentName:"li"},"MultiPolygon")," when addition polygons are added."),(0,n.yg)("li",{parentName:"ul"},"Fully 3D enabled (Can e.g. use WebGL z-buffer so that lines being rendered are properly occluded by other geometry)."),(0,n.yg)("li",{parentName:"ul"},"Seamless integration with deck.gl and all geospatial deck.gl layers, allowing for GeoJSON editing to be interleaved with rich 3D visualizations."),(0,n.yg)("li",{parentName:"ul"},"Handle all aspects of event handling, including touch screen support.")),(0,n.yg)("h2",{id:"why-use-editable-layers"},"Why use ",(0,n.yg)("inlineCode",{parentName:"h2"},"editable-layers"),"?"),(0,n.yg)("p",null,"You should strongly consider ",(0,n.yg)("inlineCode",{parentName:"p"},"editable-layers")," if:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"You want a full-featured, ultra-high-performance editing solution for GeoJson."),(0,n.yg)("li",{parentName:"ul"},"You are already using e.g. ",(0,n.yg)("inlineCode",{parentName:"li"},"deck.gl")," or ",(0,n.yg)("inlineCode",{parentName:"li"},"react-map-gl"),".")),(0,n.yg)("p",null,"You may want to look at alternatives if:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"If you have very simple editing requirements (just a simple polygon etc)"),(0,n.yg)("li",{parentName:"ul"},"If you don't want to use ",(0,n.yg)("inlineCode",{parentName:"li"},"deck.gl")," in your project.")),(0,n.yg)("p",null,"If ",(0,n.yg)("inlineCode",{parentName:"p"},"editable-layers")," is more than what you need (e.g. in terms of bundle size), and you may want to look at other solutions, e.g. the simple polygon editor overlay being developed in react-map-gl."),(0,n.yg)("p",null,"That said, if you are already using ",(0,n.yg)("inlineCode",{parentName:"p"},"deck.gl")," the additional overhead of ",(0,n.yg)("inlineCode",{parentName:"p"},"editable-layers")," is small, and the seamless integration with deck.gl should be valuable."),(0,n.yg)("h2",{id:"quick-overview-of-the-api"},"Quick Overview of the API"),(0,n.yg)("h3",{id:"editablegeojsonlayer"},"EditableGeoJsonLayer"),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"/docs/modules/editable-layers/api-reference/layers/editable-geojson-layer"},"EditableGeoJsonLayer")," is implemented as a ",(0,n.yg)("a",{parentName:"p",href:"https://deck.gl"},"deck.gl")," layer. It provides the ability to view and edit multiple types of geometry formatted as ",(0,n.yg)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7946"},"GeoJSON")," (an open standard format for geometry) including polygons, lines, and points."),(0,n.yg)("h4",{id:"callbacks"},"Callbacks"),(0,n.yg)("p",null,"When there is the ability to edit, callbacks are provided to inform you of edits."),(0,n.yg)("h2",{id:"small-example"},"Small example"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport DeckGL from 'deck.gl';\nimport {\n  EditableGeoJsonLayer,\n  DrawLineStringMode,\n  DrawPolygonMode\n} from '@deck.gl-community/editable-layers';\nimport { StaticMap } from 'react-map-gl';\n\nconst INITIAL_VIEW_STATE = {\n  longitude: -122.41669,\n  latitude: 37.7853,\n  zoom: 13,\n  pitch: 0,\n  bearing: 0\n};\n\nexport function GeometryEditor() {\n  const [features, setFeatures] = React.useState({\n    type: 'FeatureCollection',\n    features: []\n  });\n  const [mode, setMode] = React.useState(() => DrawPolygonMode);\n  const [selectedFeatureIndexes] = React.useState([]);\n\n  const layer = new EditableGeoJsonLayer({\n    data: features,\n    mode,\n    selectedFeatureIndexes,\n    onEdit: ({ updatedData }) => {\n      setFeatures(updatedData);\n    }\n  });\n\n  return (\n    <>\n      <DeckGL\n        initialViewState={INITIAL_VIEW_STATE}\n        controller={{\n          doubleClickZoom: false\n        }}\n        layers={[layer]}\n        getCursor={layer.getCursor.bind(layer)}\n      >\n        <StaticMap mapboxApiAccessToken={YOUR_TOKEN_HERE} />\n      </DeckGL>\n\n      <div className='controls'>\n        <button\n          className={`button ${mode === DrawLineStringMode ? 'active' : ''}`}\n          onClick={() => setMode(() => DrawLineStringMode)}\n        >\n          Line\n        </button>\n        <button\n          className={`button ${mode === DrawPolygonMode ? 'active' : ''}`}\n          onClick={() => setMode(() => DrawPolygonMode)}\n        >\n          Polygon\n        </button>\n      </div>\n    </>\n  );\n}\n\n")),(0,n.yg)("p",null,"Live example on ",(0,n.yg)("a",{parentName:"p",href:"https://codesandbox.io/s/nebula-react-basic-example-q7t9u?file=/src/App.js"},"codesandbox")),(0,n.yg)("h2",{id:"see-also"},"See Also"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/modules/editable-layers/api-reference/layers/editable-geojson-layer"},"EditableGeoJsonLayer")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://deck.gl/docs/get-started/using-with-react"},"Using deck.gl with React")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://deck.gl/docs/get-started/using-with-map"},"Using deck.gl with a Base Map"))),(0,n.yg)("h2",{id:"useful-examples-codesandbox"},"Useful examples (Codesandbox)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://codesandbox.io/s/hello-world-nebulagl-csvsm"},"Hello World (using deck.gl)")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://codesandbox.io/s/hello-nebulagl-with-toolbox-oelkr"},"With Toolbox")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://codesandbox.io/s/deckgl-and-nebulagl-editablegeojsonlayer-no-react-p9yrs"},"No React")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://codesandbox.io/s/connect-the-dots-mode-yow65"},"Custom EditMode"))))}c.isMDXComponent=!0}}]);