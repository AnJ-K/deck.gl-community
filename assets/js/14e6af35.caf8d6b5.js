"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[9884],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>y});var r=n(6540);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=u(n),g=l,y=d["".concat(c,".").concat(g)]||d[g]||s[g]||o;return n?r.createElement(y,i(i({ref:t},p),{},{components:n})):r.createElement(y,i({ref:t},p))}));function y(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,i=new Array(o);i[0]=g;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[d]="string"==typeof e?e:l,i[1]=a;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2704:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var r=n(8168),l=(n(6540),n(5680));const o={},i="FLOW",a={unversionedId:"modules/graph-layers/api-reference/styling/edge/edge-style-flow",id:"modules/graph-layers/api-reference/styling/edge/edge-style-flow",title:"FLOW",description:"color (String | Array | Function, optional)",source:"@site/../docs/modules/graph-layers/api-reference/styling/edge/edge-style-flow.md",sourceDirName:"modules/graph-layers/api-reference/styling/edge",slug:"/modules/graph-layers/api-reference/styling/edge/edge-style-flow",permalink:"/deck.gl-community/docs/modules/graph-layers/api-reference/styling/edge/edge-style-flow",draft:!1,editUrl:"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/graph-layers/api-reference/styling/edge/edge-style-flow.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LABEL",permalink:"/deck.gl-community/docs/modules/graph-layers/api-reference/styling/edge/edge-style-label"},next:{title:"Simple Layout",permalink:"/deck.gl-community/docs/modules/graph-layers/api-reference/layouts/simple-layout"}},c={},u=[{value:"<code>color</code> (String | Array | Function, optional)",id:"color-string--array--function-optional",level:3},{value:"<code>speed</code> (Number | Function, optional)",id:"speed-number--function-optional",level:3},{value:"<code>width</code> (Number | Function, optional)",id:"width-number--function-optional",level:3},{value:"<code>tailLength</code> (Number | Function, optional)",id:"taillength-number--function-optional",level:3}],p={toc:u},d="wrapper";function s(e){let{components:t,...n}=e;return(0,l.yg)(d,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"flow"},"FLOW"),(0,l.yg)("p",{align:"center"},(0,l.yg)("img",{src:"/gatsby/images/edge-styles/flows.gif",height:"200"})),(0,l.yg)("h3",{id:"color-string--array--function-optional"},(0,l.yg)("inlineCode",{parentName:"h3"},"color")," (String | Array | Function, optional)"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Default: ",(0,l.yg)("inlineCode",{parentName:"li"},"[255, 255, 255, 255]")),(0,l.yg)("li",{parentName:"ul"},"The value can be hex code, color name, or color array ",(0,l.yg)("inlineCode",{parentName:"li"},"[r, g, b, a]")," (each component is in the 0 - 255 range)."),(0,l.yg)("li",{parentName:"ul"},"If a color value (hex code, color name, or array) is provided, it is used as the global color for all edges."),(0,l.yg)("li",{parentName:"ul"},"If a function is provided, it is called on each edge to retrieve its color.")),(0,l.yg)("h3",{id:"speed-number--function-optional"},(0,l.yg)("inlineCode",{parentName:"h3"},"speed")," (Number | Function, optional)"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Default: ",(0,l.yg)("inlineCode",{parentName:"li"},"0")),(0,l.yg)("li",{parentName:"ul"},"Unit: number of moving segment pass through the line per second."),(0,l.yg)("li",{parentName:"ul"},"If a number is provided for ",(0,l.yg)("inlineCode",{parentName:"li"},"speed"),", all the flow will have the same speed."),(0,l.yg)("li",{parentName:"ul"},"If an accessor function is provided, the function will be called to retrieve the speed for each flow.")),(0,l.yg)("h3",{id:"width-number--function-optional"},(0,l.yg)("inlineCode",{parentName:"h3"},"width")," (Number | Function, optional)"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Default: ",(0,l.yg)("inlineCode",{parentName:"li"},"1")),(0,l.yg)("li",{parentName:"ul"},"If a number is provided for ",(0,l.yg)("inlineCode",{parentName:"li"},"width"),", all the flow will have the same width."),(0,l.yg)("li",{parentName:"ul"},"If an accessor function is provided, the function will be called to retrieve the width for each flow.")),(0,l.yg)("h3",{id:"taillength-number--function-optional"},(0,l.yg)("inlineCode",{parentName:"h3"},"tailLength")," (Number | Function, optional)"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Default: ",(0,l.yg)("inlineCode",{parentName:"li"},"1")),(0,l.yg)("li",{parentName:"ul"},"If a number is provided for ",(0,l.yg)("inlineCode",{parentName:"li"},"tailLength"),", all the flow will have the same length for the fading tail."),(0,l.yg)("li",{parentName:"ul"},"If an accessor function is provided, the function will be called to retrieve the length of the fading tail for each flow.")))}s.isMDXComponent=!0}}]);