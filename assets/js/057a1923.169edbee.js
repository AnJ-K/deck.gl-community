"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[7041],{5680:(e,r,t)=>{t.d(r,{xA:()=>d,yg:()=>y});var n=t(6540);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=n.createContext({}),u=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},d=function(e){var r=u(e.components);return n.createElement(c.Provider,{value:r},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},g=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=u(t),g=i,y=s["".concat(c,".").concat(g)]||s[g]||p[g]||o;return t?n.createElement(y,a(a({ref:r},d),{},{components:t})):n.createElement(y,a({ref:r},d))}));function y(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=g;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[s]="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=t[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},9069:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=t(8168),i=(t(6540),t(5680));const o={},a="RECTANGLE",l={unversionedId:"modules/graph-layers/api-reference/styling/node/node-style-rectangle",id:"modules/graph-layers/api-reference/styling/node/node-style-rectangle",title:"RECTANGLE",description:"width (Number | Function, required)",source:"@site/../docs/modules/graph-layers/api-reference/styling/node/node-style-rectangle.md",sourceDirName:"modules/graph-layers/api-reference/styling/node",slug:"/modules/graph-layers/api-reference/styling/node/node-style-rectangle",permalink:"/deck.gl-community/docs/modules/graph-layers/api-reference/styling/node/node-style-rectangle",draft:!1,editUrl:"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/graph-layers/api-reference/styling/node/node-style-rectangle.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CIRCLE",permalink:"/deck.gl-community/docs/modules/graph-layers/api-reference/styling/node/node-style-circle"},next:{title:"MARKER",permalink:"/deck.gl-community/docs/modules/graph-layers/api-reference/styling/node/node-style-marker"}},c={},u=[{value:"<code>width</code> (Number | Function, required)",id:"width-number--function-required",level:3},{value:"<code>height</code> (Number | Function, required)",id:"height-number--function-required",level:3},{value:"<code>fill</code> (String | Array | Function, optional)",id:"fill-string--array--function-optional",level:3},{value:"<code>stroke</code> (String | Array | Function, optional)",id:"stroke-string--array--function-optional",level:3},{value:"<code>strokeWidth</code> (Number | Function, optional)",id:"strokewidth-number--function-optional",level:3}],d={toc:u},s="wrapper";function p(e){let{components:r,...t}=e;return(0,i.yg)(s,(0,n.A)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"rectangle"},"RECTANGLE"),(0,i.yg)("p",{align:"center"},(0,i.yg)("img",{src:"/gatsby/images/node-styles/rectangle.png",height:"100"})),(0,i.yg)("h3",{id:"width-number--function-required"},(0,i.yg)("inlineCode",{parentName:"h3"},"width")," (Number | Function, required)"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"The width of the rectancle."),(0,i.yg)("li",{parentName:"ul"},"If a number is provided, it is used as the width for all objects."),(0,i.yg)("li",{parentName:"ul"},"If a function is provided, it is called on each object to retrieve its width.")),(0,i.yg)("h3",{id:"height-number--function-required"},(0,i.yg)("inlineCode",{parentName:"h3"},"height")," (Number | Function, required)"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"The height of the rectangle."),(0,i.yg)("li",{parentName:"ul"},"If a number is provided, it is used as the height for all objects."),(0,i.yg)("li",{parentName:"ul"},"If a function is provided, it is called on each object to retrieve its height.")),(0,i.yg)("h3",{id:"fill-string--array--function-optional"},(0,i.yg)("inlineCode",{parentName:"h3"},"fill")," (String | Array | Function, optional)"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Default: ",(0,i.yg)("inlineCode",{parentName:"li"},"[0, 0, 0, 255]")),(0,i.yg)("li",{parentName:"ul"},"The value can be hex code, color name, or color array ",(0,i.yg)("inlineCode",{parentName:"li"},"[r, g, b, a]")," (each component is in the 0 - 255 range).\nIf a color value (hex code, color name, or array) is provided, it is used as the global color for all objects."),(0,i.yg)("li",{parentName:"ul"},"If a function is provided, it is called on each object to retrieve its color.")),(0,i.yg)("h3",{id:"stroke-string--array--function-optional"},(0,i.yg)("inlineCode",{parentName:"h3"},"stroke")," (String | Array | Function, optional)"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Default: ",(0,i.yg)("inlineCode",{parentName:"li"},"[0, 0, 0, 255]")),(0,i.yg)("li",{parentName:"ul"},"The value can be hex code, color name, or color array ",(0,i.yg)("inlineCode",{parentName:"li"},"[r, g, b, a]")," (each component is in the 0 - 255 range)."),(0,i.yg)("li",{parentName:"ul"},"If a color value (hex code, color name, or array) is provided, it is used as the global color for all objects."),(0,i.yg)("li",{parentName:"ul"},"If a function is provided, it is called on each rectangle to retrieve its color.")),(0,i.yg)("h3",{id:"strokewidth-number--function-optional"},(0,i.yg)("inlineCode",{parentName:"h3"},"strokeWidth")," (Number | Function, optional)"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Default: ",(0,i.yg)("inlineCode",{parentName:"li"},"0"),"\nThe width of the outline of each rectangle.\nIf a number is provided, it is used as the outline width for all rectangles.\nIf a function is provided, it is called on each rectangle to retrieve its outline width.")))}p.isMDXComponent=!0}}]);