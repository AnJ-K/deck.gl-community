"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[2272],{5680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>g});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,g=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(g,l(l({ref:t},d),{},{components:n})):r.createElement(g,l({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3519:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(8168),a=(n(6540),n(5680));const o={},l="deck.gl-bing-maps",i={unversionedId:"modules/bing-maps/developer-guide/get-started",id:"modules/bing-maps/developer-guide/get-started",title:"deck.gl-bing-maps",description:"This module allows deck.gl to be used as a Bing Maps custom layer.",source:"@site/../docs/modules/bing-maps/developer-guide/get-started.md",sourceDirName:"modules/bing-maps/developer-guide",slug:"/modules/bing-maps/developer-guide/get-started",permalink:"/deck.gl-community/docs/modules/bing-maps/developer-guide/get-started",draft:!1,editUrl:"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/bing-maps/developer-guide/get-started.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/deck.gl-community/docs/modules/bing-maps/"},next:{title:"DeckOverlay",permalink:"/deck.gl-community/docs/modules/bing-maps/api-reference/deck-overlay"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(p,(0,r.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"deckgl-bing-maps"},"deck.gl-bing-maps"),(0,a.yg)("p",null,"This module allows ",(0,a.yg)("a",{parentName:"p",href:"https://deck.gl"},"deck.gl")," to be used as a Bing Maps custom layer."),(0,a.yg)("h2",{id:"installation"},"Installation"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npm install deck.gl deck.gl-bing-maps\n")),(0,a.yg)("h2",{id:"usage"},"Usage"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},"import {loadModules} from 'deck.gl-bing-maps';\nimport {GeoJsonLayer} from 'deck.gl';\n\nloadModules().then(({Maps, Location, DeckOverlay}) => {\n  // Create map\n  const map = new Map(document.getElementById('map'), {\n    credentials: 'YOUR_API_KEY',\n    // Disable modes that are not supported\n    disableBirdsEye: true,\n    disableStreetside: true\n  });\n\n  map.setView({\n    center: new Location(37.78, -122.45),\n    zoom: 10\n  });\n\n  // Add deck.gl overlay\n  const deckOverlay = new DeckOverlay({\n    layers: [\n      new GeoJsonLayer({\n        data:\n          'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_admin_0_scale_rank.geojson',\n        lineWidthMinPixels: 2,\n        getLineColor: [60, 60, 60],\n        getFillColor: [200, 200, 200]\n      })\n    ]\n  });\n  map.layers.insert(deckOverlay);\n});\n")))}u.isMDXComponent=!0}}]);