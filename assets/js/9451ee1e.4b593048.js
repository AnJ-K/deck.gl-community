"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[798],{5680:(e,t,r)=>{r.d(t,{xA:()=>m,yg:()=>g});var o=r(6540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),c=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=c(r),d=n,g=u["".concat(p,".").concat(d)]||u[d]||s[d]||a;return r?o.createElement(g,i(i({ref:t},m),{},{components:r})):o.createElement(g,i({ref:t},m))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6401:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=r(8168),n=(r(6540),r(5680));const a={},i="Viewport (React)",l={unversionedId:"modules/react-graph-layers/api-reference/viewport",id:"modules/react-graph-layers/api-reference/viewport",title:"Viewport (React)",description:"initialViewState (Object, optional)",source:"@site/../docs/modules/react-graph-layers/api-reference/viewport.md",sourceDirName:"modules/react-graph-layers/api-reference",slug:"/modules/react-graph-layers/api-reference/viewport",permalink:"/deck.gl-community/docs/modules/react-graph-layers/api-reference/viewport",draft:!1,editUrl:"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/react-graph-layers/api-reference/viewport.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"GraphGL (React)",permalink:"/deck.gl-community/docs/modules/react-graph-layers/api-reference/graphgl"}},p={},c=[{value:"initialViewState (Object, optional)",id:"initialviewstate-object-optional",level:3},{value:"<code>minZoom</code> (Number, optional)",id:"minzoom-number-optional",level:3},{value:"<code>maxZoom</code> (Number, optional)",id:"maxzoom-number-optional",level:3},{value:"<code>viewportPadding</code> (Number, optional)",id:"viewportpadding-number-optional",level:3}],m={toc:c},u="wrapper";function s(e){let{components:t,...r}=e;return(0,n.yg)(u,(0,o.A)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"viewport-react"},"Viewport (React)"),(0,n.yg)("h3",{id:"initialviewstate-object-optional"},"initialViewState (Object, optional)"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"initialViewState={{\n  target: [0, 0],\n  zoom: 1,\n}}\n")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"target (","[x: Number, y: Number]",", optional):  The target origin to the center of the view."),(0,n.yg)("li",{parentName:"ul"},"zoom (Number, optional): The zoom level of the view.")),(0,n.yg)("h3",{id:"minzoom-number-optional"},(0,n.yg)("inlineCode",{parentName:"h3"},"minZoom")," (Number, optional)"),(0,n.yg)("p",null,"A minimum scale factor for zoom level of the graph."),(0,n.yg)("h3",{id:"maxzoom-number-optional"},(0,n.yg)("inlineCode",{parentName:"h3"},"maxZoom")," (Number, optional)"),(0,n.yg)("p",null,"A maximum scale factor for zoom level of the graph."),(0,n.yg)("h3",{id:"viewportpadding-number-optional"},(0,n.yg)("inlineCode",{parentName:"h3"},"viewportPadding")," (Number, optional)"),(0,n.yg)("p",null,"Padding for fitting entire graph in the screen. (pixel)"))}s.isMDXComponent=!0}}]);