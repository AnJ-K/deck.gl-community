"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[4459],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(n),h=a,m=u["".concat(c,".").concat(h)]||u[h]||d[h]||l;return n?o.createElement(m,r(r({ref:t},p),{},{components:n})):o.createElement(m,r({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:a,r[1]=i;for(var s=2;s<l;s++)r[s]=n[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8482:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var o=n(7462),a=(n(7294),n(3905));const l={},r="Interactions",i={unversionedId:"modules/react-graph-layers/api-reference/interactions",id:"modules/react-graph-layers/api-reference/interactions",title:"Interactions",description:"In this chapter, you'll learn about how to interact with the graph.",source:"@site/../docs/modules/react-graph-layers/api-reference/interactions.md",sourceDirName:"modules/react-graph-layers/api-reference",slug:"/modules/react-graph-layers/api-reference/interactions",permalink:"/docs/modules/react-graph-layers/api-reference/interactions",draft:!1,editUrl:"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/react-graph-layers/api-reference/interactions.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Edge Style",permalink:"/docs/modules/react-graph-layers/api-reference/edge-style"},next:{title:"Viewport",permalink:"/docs/modules/react-graph-layers/api-reference/viewport"}},c={},s=[{value:"<code>nodeEvents</code> (Object, optional)",id:"nodeevents-object-optional",level:3},{value:"<code>edgeEvents</code> (Object, optional)",id:"edgeevents-object-optional",level:3},{value:"<code>wheelSensitivity</code> (Number: 0 to 1, optional)",id:"wheelsensitivity-number-0-to-1-optional",level:3},{value:"<code>enableZooming</code> (bool, optional)",id:"enablezooming-bool-optional",level:3},{value:"<code>enablePanning</code> (bool, optional)",id:"enablepanning-bool-optional",level:3},{value:"<code>enableDragging</code> (bool, optional)",id:"enabledragging-bool-optional",level:3},{value:"<code>resumeLayoutAfterDragging</code> (bool, optional)",id:"resumelayoutafterdragging-bool-optional",level:3}],p={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"interactions"},"Interactions"),(0,a.kt)("p",null,"In this chapter, you'll learn about how to interact with the graph."),(0,a.kt)("p",null,"There are the porperties you can specify when using the GraphGL component:"),(0,a.kt)("h3",{id:"nodeevents-object-optional"},(0,a.kt)("inlineCode",{parentName:"h3"},"nodeEvents")," (Object, optional)"),(0,a.kt)("p",null,"All events callbacks will be triggered with the following parameters:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"info: {\n  object:  The object that was picked.\n  x: Mouse position x relative to the viewport.\n  y: Mouse position y relative to the viewport.\n  coordinate:  Mouse position in viewport coordinate system.\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"onClick: This callback will be called when the mouse clicks on a node. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),"."),(0,a.kt)("li",{parentName:"ul"},"onMouseEnter: This callback will be called when the mouse enter a node. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),"."),(0,a.kt)("li",{parentName:"ul"},"onHover: This callback will be called when the mouse hovers over a node. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),"."),(0,a.kt)("li",{parentName:"ul"},"onMouseLeave: This callback will be called when the mouse leaves a node. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),"."),(0,a.kt)("li",{parentName:"ul"},"onDrag: This callback will be called when draggin a node. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),".")),(0,a.kt)("h3",{id:"edgeevents-object-optional"},(0,a.kt)("inlineCode",{parentName:"h3"},"edgeEvents")," (Object, optional)"),(0,a.kt)("p",null,"All events callbacks will be triggered with the following parameters:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"info: {\n  object:  The object that was picked.\n  x: Mouse position x relative to the viewport.\n  y: Mouse position y relative to the viewport.\n  coordinate:  Mouse position in viewport coordinate system.\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"onClick: This callback will be called when the mouse clicks on an edge. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),"."),(0,a.kt)("li",{parentName:"ul"},"onHover: This callback will be called when the mouse hovers over an edge. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),".")),(0,a.kt)("h3",{id:"wheelsensitivity-number-0-to-1-optional"},(0,a.kt)("inlineCode",{parentName:"h3"},"wheelSensitivity")," (Number: 0 to 1, optional)"),(0,a.kt)("p",null,"Changes the scroll wheel sensitivity when zooming. This is a multiplicative modifier.\nSo, a value between 0 and 1 reduces the sensitivity (zooms slower),\nand a value greater than 1 increases the sensitivity (zooms faster)"),(0,a.kt)("h3",{id:"enablezooming-bool-optional"},(0,a.kt)("inlineCode",{parentName:"h3"},"enableZooming")," (bool, optional)"),(0,a.kt)("p",null,"Whether zooming the graph is enabled"),(0,a.kt)("h3",{id:"enablepanning-bool-optional"},(0,a.kt)("inlineCode",{parentName:"h3"},"enablePanning")," (bool, optional)"),(0,a.kt)("p",null,"Whether panning the graph is enabled"),(0,a.kt)("h3",{id:"enabledragging-bool-optional"},(0,a.kt)("inlineCode",{parentName:"h3"},"enableDragging")," (bool, optional)"),(0,a.kt)("p",null,"Whether dragging the node is enabled"),(0,a.kt)("h3",{id:"resumelayoutafterdragging-bool-optional"},(0,a.kt)("inlineCode",{parentName:"h3"},"resumeLayoutAfterDragging")," (bool, optional)"),(0,a.kt)("p",null,"Resume layout calculation after dragging a node"))}d.isMDXComponent=!0}}]);