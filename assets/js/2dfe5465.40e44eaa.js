"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[5978],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=p(r),f=o,m=s["".concat(c,".").concat(f)]||s[f]||d[f]||a;return r?n.createElement(m,l(l({ref:t},u),{},{components:r})):n.createElement(m,l({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[s]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},6753:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={},l="FLOW",i={unversionedId:"modules/react-graph-layers/api-reference/edge-style-flow",id:"modules/react-graph-layers/api-reference/edge-style-flow",title:"FLOW",description:"color (String | Array | Function, optional)",source:"@site/../docs/modules/react-graph-layers/api-reference/edge-style-flow.md",sourceDirName:"modules/react-graph-layers/api-reference",slug:"/modules/react-graph-layers/api-reference/edge-style-flow",permalink:"/docs/modules/react-graph-layers/api-reference/edge-style-flow",draft:!1,editUrl:"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/react-graph-layers/api-reference/edge-style-flow.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LABEL",permalink:"/docs/modules/react-graph-layers/api-reference/edge-style-label"},next:{title:"Simple Layout",permalink:"/docs/modules/react-graph-layers/api-reference/simple-layout"}},c={},p=[{value:"<code>color</code> (String | Array | Function, optional)",id:"color-string--array--function-optional",level:3},{value:"<code>speed</code> (Number | Function, optional)",id:"speed-number--function-optional",level:3},{value:"<code>width</code> (Number | Function, optional)",id:"width-number--function-optional",level:3},{value:"<code>tailLength</code> (Number | Function, optional)",id:"taillength-number--function-optional",level:3}],u={toc:p},s="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(s,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"flow"},"FLOW"),(0,o.kt)("p",{align:"center"},(0,o.kt)("img",{src:"/gatsby/images/edge-styles/flows.gif",height:"200"})),(0,o.kt)("h3",{id:"color-string--array--function-optional"},(0,o.kt)("inlineCode",{parentName:"h3"},"color")," (String | Array | Function, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"[255, 255, 255, 255]")),(0,o.kt)("li",{parentName:"ul"},"The value can be hex code, color name, or color array ",(0,o.kt)("inlineCode",{parentName:"li"},"[r, g, b, a]")," (each component is in the 0 - 255 range)."),(0,o.kt)("li",{parentName:"ul"},"If a color value (hex code, color name, or array) is provided, it is used as the global color for all edges."),(0,o.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each edge to retrieve its color.")),(0,o.kt)("h3",{id:"speed-number--function-optional"},(0,o.kt)("inlineCode",{parentName:"h3"},"speed")," (Number | Function, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"0")),(0,o.kt)("li",{parentName:"ul"},"Unit: number of moving segment pass through the line per second."),(0,o.kt)("li",{parentName:"ul"},"If a number is provided for ",(0,o.kt)("inlineCode",{parentName:"li"},"speed"),", all the flow will have the same speed."),(0,o.kt)("li",{parentName:"ul"},"If an accessor function is provided, the function will be called to retrieve the speed for each flow.")),(0,o.kt)("h3",{id:"width-number--function-optional"},(0,o.kt)("inlineCode",{parentName:"h3"},"width")," (Number | Function, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"1")),(0,o.kt)("li",{parentName:"ul"},"If a number is provided for ",(0,o.kt)("inlineCode",{parentName:"li"},"width"),", all the flow will have the same width."),(0,o.kt)("li",{parentName:"ul"},"If an accessor function is provided, the function will be called to retrieve the width for each flow.")),(0,o.kt)("h3",{id:"taillength-number--function-optional"},(0,o.kt)("inlineCode",{parentName:"h3"},"tailLength")," (Number | Function, optional)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"1")),(0,o.kt)("li",{parentName:"ul"},"If a number is provided for ",(0,o.kt)("inlineCode",{parentName:"li"},"tailLength"),", all the flow will have the same length for the fading tail."),(0,o.kt)("li",{parentName:"ul"},"If an accessor function is provided, the function will be called to retrieve the length of the fading tail for each flow.")))}d.isMDXComponent=!0}}]);